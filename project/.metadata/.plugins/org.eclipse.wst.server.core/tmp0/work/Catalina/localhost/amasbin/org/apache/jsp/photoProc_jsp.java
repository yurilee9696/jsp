/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.5
 * Generated at: 2018-05-03 23:54:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.FileReader;
import java.io.BufferedReader;

public final class photoProc_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.FileReader");
    _jspx_imports_classes.add("java.io.BufferedReader");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

String contentpage= request.getParameter("CONTENTPAGE");

String idSession=(String) session.getAttribute("id"); //세션 가져오기
String pwSession=(String) session.getAttribute("pw");

if(idSession==null||pwSession==null){
	out.print("<SCRIPT LANGUAGE='JavaScript'>");
	out.print("alert('회원만 사용가능합니다!');");
	out.print("location.href='login.jsp';");
	out.print("</SCRIPT>");
	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
}
      out.write('\r');
      out.write('\n');

if(!(idSession==null||pwSession==null)){
	int cnt=0;
	try{
		 String couponPath=application.getRealPath("/WEB-INF/couponCount.txt");
		out.println(couponPath);
		FileReader fr = new FileReader(couponPath); //파일읽기객체생성
         BufferedReader br = new BufferedReader(fr); //버퍼리더객체생성
         String line = null;
         while((line=br.readLine())!=null){ //라인단위 읽기
			out.println("원래있던 값 : "+Integer.parseInt(line) + "<br>");
     		//buyCount+=Integer.parseInt(line)+1;
     		cnt=Integer.parseInt(line);
      out.write("\r\n");
      out.write("     \t\t\r\n");
      out.write("     \t\t<script>\r\n");
      out.write("     \t\t\tvar couponCnt=");
      out.print(cnt);
      out.write(";\r\n");
      out.write("     \t\t\twindow.onload=function couponShow(){\r\n");
      out.write("     \t\t\t\tvar cId=\"cp\";\r\n");
      out.write("     \t\t\t\tvar couponId = new Array(couponCnt.length);\r\n");
      out.write("     \t\t\t\tfor(var i=1;i<=parseInt(couponCnt);i++){\r\n");
      out.write("     \t\t\t\t\t//cId+=i;\r\n");
      out.write("     \t\t\t\t\t//document.write(cId);\r\n");
      out.write("         \t\t\t\tcouponId[i]=document.getElementById(\"cp\"+i);\r\n");
      out.write("         \t\t\t\t//document.write(couponId);\r\n");
      out.write("         \t\t\t\t\tcouponId[i].style.backgroundColor=\"red\";\r\n");
      out.write("         \t\t\t\t//CId=\"cp\";\r\n");
      out.write("         \t\t\t\t}\r\n");
      out.write("     \t\t\t}//couponShow End\r\n");
      out.write("     \t\t</script>\r\n");
      out.write("         ");
}//while
		  out.print(cnt);
	}catch(Exception e) { 
	    System.out.println(e.toString()); //에러 발생시 메시지 출력
	}
      out.write("\r\n");
      out.write("<p>1회 방문 시 스탬프 1개 찍어 드려요.</p>\r\n");
      out.write("<p>버블을 모아 빨대를 콕! 꽂으면 모든 음료 중 한 잔이 무료!</p>\r\n");
      out.write("<p>(R) 사이즈 합산은 불가능하니 꼭 챙겨 다니세요!</p>\r\n");
      out.write("<center>\r\n");
      out.write("\t<table border=1>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td id=\"cp1\">1</td>\r\n");
      out.write("\t\t\t<td id=\"cp2\">2</td>\r\n");
      out.write("\t\t\t<td id=\"cp3\">3</td>\r\n");
      out.write("\t\t\t<td id=\"cp4\">4</td>\r\n");
      out.write("\t\t\t<td id=\"cp5\">5</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td id=\"cp6\">6</td>\r\n");
      out.write("\t\t\t<td id=\"cp7\">7</td>\r\n");
      out.write("\t\t\t<td id=\"cp8\">8</td>\r\n");
      out.write("\t\t\t<td id=\"cp9\">9</td>\r\n");
      out.write("\t\t\t<td id=\"cp10\">10</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</table>\r\n");
      out.write("</center>\r\n");
      out.write("<form method=\"post\">\r\n");
      out.write("\t<input type=\"button\" value=\"사용하기\" onclick=\"useCoupon()\"></input>\r\n");
      out.write("</form>\r\n");
      out.write("<script>\r\n");
      out.write("function useCoupon(){\r\n");
      out.write("\t\tif(couponCnt>=10){\r\n");
      out.write("\t\t\talert(\"쿠폰이 사용됩니다\");\r\n");
      out.write("\t\t\tcouponCnt=0;\r\n");
      out.write("\t\t\tlocation.replace(\"buyOk.jsp\");\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse {\r\n");
      out.write("\t\t\talert(\"아직 쿠폰이 10개가 되지 않았습니다! 좀 더 모아보세요!\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t} \r\n");
      out.write("</script>\r\n");


} 
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
